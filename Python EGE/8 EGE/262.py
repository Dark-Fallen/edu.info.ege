'''
Для решения задач 8 номера достаточно прописать лагоритм перебора последовательностей для проверки каждой по указанным условиям.

Задача:
Определите количество пятизначных чисел, записанных в восьмеричной системе счисления, в записи которых ровно одна цифра 6, 
при этом никакая нечётная цифра не стоит рядом с цифрой 6.

Ответ: 2961.

Идея решения: прогоняем цикл с параметром в диапазоне [10000; 77777] восмеричной системы сисления. Переводим каждое число в строку для
позиционной проверки. Как только находим несоответствия условиям, пропускаем число и проверяем следующее. Поскольку перебор осуществляется
не в десятичной системе, более понятно будет использовать перебор значений каждой из 5 восьмеричных цифр.
Второй вариант: перебор в одном цикле на интервале [8^4:7*(8^4+8^3+8^2+8+1)] с последующим переводом каждого числа в восьмеричную форму.
'''

# Решение задачи

count_of_numbers: int = 0

for i in range(1,8):
    for j in range(0,8):
        for k in range(0,8):
            for l in range(0,8):
                for m in range(0,8):
                    number: str = str(i) + str(j) + str(k) + str(l) + str(m)
                    count_of_6 = 0
                    isEvenNear = True
                    for idx in range(5):
                        if number[idx] == '6':
                            count_of_6 += 1
                            if idx == 0 and int(number[idx + 1]) % 2 != 0:
                                isEvenNear = False
                            elif idx == 4 and int(number[idx - 1]) % 2 != 0:
                                isEvenNear = False
                            elif idx != 0 and idx != 4 and (int(number[idx + 1]) % 2 != 0 or int(number[idx - 1]) % 2 != 0):
                                isEvenNear = False
                    if count_of_6 == 1 and isEvenNear:
                        count_of_numbers += 1

print(count_of_numbers)