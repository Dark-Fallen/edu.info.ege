'''
Для решения задач 17 номера нужно уметь считывать данные из файла. Также нужно уметь обрабатыввать значения последовательностей
попарно (по тройкам, четверкам и т. д.):
a) Когда парой (тройкой, четверкой и т. д.) считаются только идущие подряд числа.
b) Когда парой (тройкой, четверкой и т. д.) считаются не обязательно идущие подряд числа.

Задача:
В файле 17-354.txt содержится последовательность целых чисел, по модулю не превышающих 10000. Определите количество пар, для которых
выполняются следующие условия:
– запись элементов пары заканчивается одной и той же цифрой;
– только один из элементов пары делится без остатка на 3;
– сумма квадратов элементов пары не превышает квадрат наименьшего из всех элементов последовательности, запись которых
заканчивается цифрой 1.
В ответе запишите два числа: сначала количество найденных пар, затем максимальную сумму элементов этих пар.

Ответ: 157 13138.

Примечание: деление по модулю привычно определено для положительных чисел. Однако отрицательные числа дают иные результаты.
Так, для 11 деление по модулю на 10 вернет 1, но для -11 результат будет равен 9 (-11 - (-20) = 9). Потому отбор всех чисел, оканчивающихся на 1,
стоит выполнять при проверка остатка от деления модуля таких чисел на 10.
'''

file = open('17-354.txt', 'r')

nums = [int(i) for i in file.readlines() if i != '']
sNum = min([i for i in nums if abs(i) % 10 == 1])

count = 0
maxSum = None

for i in range(len(nums) - 1):
    firstNum = nums[i]
    secondNum = nums[i + 1]
    countOfEvenFor3 = 0
    countOfEvenFor3 += 1 if firstNum % 3 == 0 else 0
    countOfEvenFor3 += 1 if secondNum % 3 == 0 else 0
    if (abs(firstNum) % 10 == abs(secondNum) % 10) and (countOfEvenFor3 == 1) and (firstNum ** 2 + secondNum ** 2 <= sNum ** 2):
        count += 1
        if maxSum == None or maxSum < firstNum + secondNum:
            maxSum = firstNum + secondNum

print(f'Число найденных пар: {count}. Максимальная сумма: {maxSum}.')
